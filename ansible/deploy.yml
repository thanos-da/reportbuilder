---
- name: Install RVM, Ruby, and Bundler
  hosts: all
  become: true

  vars:
    rvm_users:
      - ubuntu
    ruby_version: "3.2.2"

  tasks:

    - name: Update and upgrade apt packages
      apt:
        update_cache: yes
        upgrade: dist

    - name: Install required packages
      apt:
        name:
          - curl
          - gnupg2
          - acl
          - software-properties-common
          - autoconf
          - bison
          - build-essential
          - libssl-dev
          - libyaml-dev
          - libreadline6-dev
          - zlib1g-dev
          - libncurses5-dev
          - libffi-dev
          - libgdbm6
          - libgdbm-dev
          - libdb-dev
        state: present

    - name: Ensure rvm group exists
      group:
        name: rvm
        state: present

    - name: Ensure users exist and have home directories
      user:
        name: "{{ item }}"
        state: present
        create_home: yes
        shell: /bin/bash
      loop: "{{ rvm_users }}"

    - name: Ensure each user owns their home directory
      file:
        path: "/home/{{ item }}"
        owner: "{{ item }}"
        group: "{{ item }}"
        mode: '0755'
        state: directory
      loop: "{{ rvm_users }}"

    - name: Ensure .gnupg directory exists for each user
      file:
        path: "/home/{{ item }}/.gnupg"
        state: directory
        owner: "{{ item }}"
        group: "{{ item }}"
        mode: '0700'
      loop: "{{ rvm_users }}"

    - name: Import RVM GPG key (mpapis) for each user
      become_user: "{{ item }}"
      shell: curl -sSL https://rvm.io/mpapis.asc | gpg --import -
      args:
        executable: /bin/bash
      loop: "{{ rvm_users }}"
      register: import_mpapis
      changed_when: "'imported' in import_mpapis.stdout or 'not changed' in import_mpapis.stdout"

    - name: Import RVM GPG key (pkuczynski) for each user
      become_user: "{{ item }}"
      shell: curl -sSL https://rvm.io/pkuczynski.asc | gpg --import -
      args:
        executable: /bin/bash
      loop: "{{ rvm_users }}"
      register: import_pkuczynski
      changed_when: "'imported' in import_pkuczynski.stdout or 'not changed' in import_pkuczynski.stdout"

    - name: Install RVM for each user
      become_user: "{{ item }}"
      shell: curl -sSL https://get.rvm.io | bash -s stable
      args:
        executable: /bin/bash
      loop: "{{ rvm_users }}"

    - name: Add users to rvm group
      user:
        name: "{{ item }}"
        groups: rvm
        append: yes
      loop: "{{ rvm_users }}"

    - name: Enable RVM in bashrc for each user
      lineinfile:
        path: "/home/{{ item }}/.bashrc"
        line: 'source /etc/profile.d/rvm.sh'
        state: present
        insertafter: EOF
        owner: "{{ item }}"
        group: "{{ item }}"
        mode: '0644'
      loop: "{{ rvm_users }}"

    - name: Check if Ruby {{ ruby_version }} is already installed for each user
      become_user: "{{ item }}"
      shell: |
        source ~/.rvm/scripts/rvm
        rvm list strings | grep -Fxq "ruby-{{ ruby_version }}"
      args:
        executable: /bin/bash
      register: ruby_check
      ignore_errors: true
      changed_when: false
      loop: "{{ rvm_users }}"
      loop_control:
        index_var: idx

    - name: Install Ruby {{ ruby_version }} if not installed for each user
      become_user: "{{ item }}"
      shell: |
        source ~/.rvm/scripts/rvm
        rvm install {{ ruby_version }}
      args:
        executable: /bin/bash
      loop: "{{ rvm_users }}"
      loop_control:
        index_var: idx
      when: ruby_check.results[idx].rc != 0

    - name: Set Ruby {{ ruby_version }} as default for each user
      become_user: "{{ item }}"
      shell: |
        source ~/.rvm/scripts/rvm
        rvm use {{ ruby_version }} --default
      args:
        executable: /bin/bash
      loop: "{{ rvm_users }}"

    - name: Install bundler gem for each user
      become_user: "{{ item }}"
      shell: |
        source ~/.rvm/scripts/rvm
        gem install bundler --no-document
      args:
        executable: /bin/bash
      loop: "{{ rvm_users }}"
